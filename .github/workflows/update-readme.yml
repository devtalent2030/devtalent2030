name: Learning Showcase → README

on:
  schedule:
    # Every Friday 18:00 UTC (14:00 Toronto)
    - cron: '0 18 * * FRI'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  inject:
    runs-on: ubuntu-latest
    env:
      MODE: latest          # latest | random
      FOLDER: showcase
      README: README.md
      START: "<!-- SHOWCASE_START -->"
      END: "<!-- SHOWCASE_END -->"

    steps:
      - uses: actions/checkout@v4

      - name: Sanity check
        run: |
          echo "Branch: ${{ github.ref_name }}"
          ls -la
          test -d "$FOLDER" || { echo "::error::Folder '$FOLDER' not found"; exit 1; }
          ls -1 "$FOLDER"/*.md || { echo "::error::No markdown files in $FOLDER/"; exit 1; }
          grep -q "$START" "$README" || { echo "::error::START marker not found in $README"; exit 1; }
          grep -q "$END" "$README"   || { echo "::error::END marker not found in $README"; exit 1; }

      - name: Pick showcase file
        id: pick
        run: |
          set -euo pipefail
          if [ "$MODE" = "random" ]; then
            file=$(ls -1 "$FOLDER"/*.md | shuf -n1)
          else
            file=$(ls -1 "$FOLDER"/*.md | sort -r | head -n1)
          fi
          echo "Chosen → $file"
          echo "FILE=$file" >> "$GITHUB_OUTPUT"

      - name: Inject into README
        run: |
          set -euo pipefail
          starfile="${{ steps.pick.outputs.FILE }}"
          echo "::notice::Injecting $starfile"
          newblock="$(cat "$starfile")"

          # Replace the content between markers, preserving both markers
          awk -v s="$START" -v e="$END" -v b="$newblock" '
            $0==s { print; print ""; print b; print ""; in=1; next }
            $0==e { print; in=0; next }
            !in { print }
          ' "$README" > README.tmp
          mv README.tmp "$README"

          # Update timestamp line if present
          if grep -q "Last updated:" "$README"; then
            sed -i 's/Last updated: .*<\/sup>/Last updated: '"$(date -u)"'<\/sup>/' "$README"
          fi

      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin "${{ github.ref_name }}" || true
          git add "$README"
          git commit -m "docs: rotate Learning Showcase → README" || echo "no changes"
          git push
