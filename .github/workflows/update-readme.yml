name: Learning Showcase → README

on:
  schedule:
    # Every Friday 18:00 UTC (14:00 Toronto)
    - cron: '0 18 * * FRI'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  inject:
    runs-on: ubuntu-latest
    env:
      MODE: latest                    # latest | random
      FOLDER: showcase
      README: README.md
      START: "<!-- SHOWCASE_START -->"
      END: "<!-- SHOWCASE_END -->"

    steps:
      - uses: actions/checkout@v4

      - name: Sanity check
        run: |
          echo "Branch: ${{ github.ref_name }}"
          test -d "$FOLDER" || { echo "::error::Folder '$FOLDER' not found"; exit 1; }
          ls -1 "$FOLDER"/*.md || { echo "::error::No markdown files in $FOLDER/"; exit 1; }
          grep -q "$START" "$README" || { echo "::error::START marker not found in $README"; exit 1; }
          grep -q "$END" "$README"   || { echo "::error::END marker not found in $README"; exit 1; }

      - name: Pick showcase file
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          if [ "$MODE" = "random" ]; then
            FILE=$(ls -1 "$FOLDER"/*.md | shuf -n1)
          else
            # pick newest by YYYY-MM-DD prefix
            FILE=$(ls -1 "$FOLDER"/*.md | sort -r | head -n1)
          fi
          echo "Chosen → $FILE"
          echo "FILE=$FILE" >> "$GITHUB_OUTPUT"

      - name: Inject into README (safe Python)
        env:
          STARFILE: ${{ steps.pick.outputs.FILE }}
        run: |
          python - <<'PY'
          import os, re, datetime

          START = os.environ['START']
          END = os.environ['END']
          README = os.environ['README']
          STARFILE = os.environ['STARFILE']

          with open(STARFILE, 'r', encoding='utf-8') as f:
            block = f.read().strip()

          with open(README, 'r', encoding='utf-8') as f:
            txt = f.read()

          # Replace strictly between exact markers, preserving the markers
          pattern = re.compile(re.escape(START) + r'.*?' + re.escape(END), re.S)
          if not pattern.search(txt):
            raise SystemExit("Markers not found in README")
          new_section = START + "\n\n" + block + "\n\n" + END
          txt = pattern.sub(new_section, txt)

          # Update timestamp if present
          ts = datetime.datetime.utcnow().strftime("%a %b %d %H:%M:%S UTC %Y")
          txt = re.sub(r'Last updated: .*?</sup>',
                       f'Last updated: {ts}</sup>', txt)

          with open(README, 'w', encoding='utf-8') as f:
            f.write(txt)
          PY

      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin "${{ github.ref_name }}" || true
          git add "$README"
          git commit -m "docs: rotate Learning Showcase → README" || echo "no changes"
          git push
